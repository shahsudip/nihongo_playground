/* === NEW THEME: COLOR PALETTE === */
:root {
  --primary-green: #58a700;
  --primary-green-dark: #468400;
  --text-light: #e2e8f0;
  --text-medium: #a0aec0;
  --background-dark: #1a202c;
  --background-light: #2d3748;
  --surface-light: #4a5568;
  --feedback-correct: #48bb78;
  --feedback-incorrect: #f56565;
  --feedback-new: #4299e1;      /* Blue for "New" items */
  --feedback-mastered: #9f7aea; /* Purple for "Mastered" items */
}

/* === GLOBAL STYLES === */
*, *::before, *::after {
  box-sizing: border-box; /* MODIFICATION 1: Universal box-sizing for stable layouts */
}

body {
  margin: 0;
  padding: 0;
  font-family: 'Noto Sans JP', sans-serif;
  background-color: var(--background-dark);
  color: var(--text-light);
  overflow-x: hidden;
}

/* === LANDING PAGE & HEADER === */
.landing-page-wrapper { position: relative; width: 100vw; height: 100vh; overflow: hidden; display: flex; justify-content: center; align-items: center; }
.main-header { position: absolute; top: 0; left: 0; width: 100%; padding: 20px 50px; display: flex; justify-content: space-between; align-items: center; z-index: 10; box-sizing: border-box; }
.logo-container {
  display: flex;
  align-items: center;
  gap: 10px;
}
.logo-image { height: 80px; width: auto; }
.logo-title { font-size: 1.5rem; font-weight: bold; color: #fff; text-decoration: none; background: linear-gradient(90deg, #a5d6a7, var(--primary-green), var(--text-light)); background-size: 200% 200%; -webkit-background-clip: text; background-clip: text; -webkit-text-fill-color: transparent; animation: gradient-animation 4s ease infinite; }
.main-nav { display: flex; gap: 30px; }
.nav-link { color: var(--text-medium); text-decoration: none; font-size: 1rem; font-weight: bold; position: relative; padding-bottom: 5px; }
.nav-link::after { content: ''; position: absolute; bottom: 0; left: 0; width: 100%; height: 2px; background-color: var(--primary-green); transform: scaleX(0); transform-origin: bottom right; transition: transform 0.25s ease-out; }
.nav-link:hover::after { transform: scaleX(1); transform-origin: bottom left; }
.expressive-content { text-align: center; max-width: 800px; }
.expressive-title { font-size: 4.5rem; font-weight: 700; color: var(--text-light); line-height: 1.2; margin-bottom: 25px; }
.expressive-title span { display: inline-block; opacity: 0; transform: translateY(20px); animation: fadeInUp 0.5s ease forwards; margin: 0 5px; }
.expressive-subtitle { font-size: 1.25rem; color: var(--text-medium); margin-bottom: 40px; max-width: 600px; margin-left: auto; margin-right: auto; opacity: 0; animation: fadeInUp 0.5s ease 0.6s forwards; }
.home-actions { display: flex; flex-direction: column; align-items: center; gap: 20px; }
.profile-button-home { font-size: 1.2rem; color: var(--text-light); text-decoration: none; padding: 10px 20px; border: 1px solid var(--surface-light); border-radius: 25px; transition: background-color 0.2s, color 0.2s; }
.profile-button-home:hover { background-color: var(--surface-light); color: white; }

/* === GENERAL BUTTONS & CARDS === */
.start-quiz-button-new { display: inline-block; background-color: var(--primary-green); color: white; padding: 20px 40px; text-decoration: none; font-size: 1.5rem; border-radius: 35px; font-weight: bold; border: none; cursor: pointer; transition: background-color 0.3s ease, transform 0.2s ease, box-shadow 0.3s ease; box-shadow: 0 8px 20px rgba(88, 167, 0, 0.4); }
.start-quiz-button-new:hover { background-color: var(--primary-green-dark); transform: translateY(-5px) scale(1.02); box-shadow: 0 12px 25px rgba(88, 167, 0, 0.6); }
/* === LEVEL & CATEGORY SELECTION === */

.level-selection-container { display: flex; flex-direction: column; justify-content: center; align-items: center; min-height: 100vh; padding: 20px; }
.level-title, .category-title { font-size: 2rem; color: var(--primary-green); margin-bottom: 30px; text-align: center; }
.level-grid {
  display: grid;
  grid-template-columns: repeat(2, 1fr);
  gap: 25px;
  width: 100%;
  max-width: 800px;
}
.level-card {
  background: var(--background-light);
  color: var(--text-light);
  text-decoration: none;
  font-weight: bold;
  padding: 25px 20px;
  border-radius: 10px;
  text-align: center;
  transition: transform 0.2s ease, background-color 0.2s ease;
  box-shadow: 0 5px 15px rgba(0, 0, 0, 0.3);
  border: none;
  cursor: pointer;
  font-family: inherit;
  margin: 0 auto;
  width: 100%;
  min-height: 120px;
  display: flex;
  justify-content: center;
  align-items: center;
}
.level-card-name {
  font-size: 2.5rem;
}
.level-card:hover { transform: translateY(-5px); background-color: var(--primary-green); }

.creator-card {
  grid-column: 1 / -1; /* Span full width */
  border: 2px dashed var(--surface-light);
  background: transparent;
  text-align: left;
  display: flex;
  align-items: center;
  padding: 25px;
}
.creator-card:hover {
  border-color: var(--primary-green);
  background-color: rgba(88, 167, 0, 0.1);
  transform: translateY(0); /* Override the default hover effect */
}
/* Add a large "+" icon using CSS */
.creator-card::before {
  content: '+';
  font-size: 4rem;
  font-weight: 200;
  color: var(--primary-green);
  margin-right: 25px;
  line-height: 1;
}
.creator-card-content h3 {
  margin: 0 0 10px 0;
  font-size: 1.5rem;
  color: var(--text-light);
}
.creator-card-content p {
  margin: 0;
  font-size: 1rem;
  color: var(--text-medium);
  font-weight: normal;
}
.category-grid { display: grid; grid-template-columns: 1fr 1fr; gap: 20px; }
.category-card { background: var(--background-light); color: var(--text-light); text-decoration: none; font-size: 1.5rem; padding: 30px 20px; border-radius: 10px; transition: transform 0.2s, background-color 0.2s; }
.category-card:hover { transform: translateY(-5px); background-color: var(--surface-light); }



/* === DIFFICULTY SELECTION === */
.difficulty-selection-container { text-align: center; width: 100%; max-width: 600px; }
.difficulty-title { font-size: 2.5rem; color: var(--primary-green); margin-bottom: 40px; }
.difficulty-grid { display: flex; flex-direction: column; gap: 20px; margin-bottom: 40px; }
.difficulty-button { background: var(--background-light); color: var(--text-light); border: 2px solid var(--surface-light); font-size: 1.8rem; font-weight: bold; padding: 25px; border-radius: 10px; cursor: pointer; transition: background-color 0.2s, transform 0.2s; display: flex; justify-content: center; align-items: center; gap: 15px; }
.difficulty-button:not(:disabled):hover { background-color: var(--surface-light); transform: translateY(-3px); }
.difficulty-button.locked { background-color: var(--background-dark); color: var(--surface-light); cursor: not-allowed; border-color: var(--background-light); }
.back-button {  
  width: 100%;
  padding: 15px 20px;
  margin-top: 40px; /* Adds space above the button */
  
  font-size: 1rem;
  font-weight: bold;
  font-family: inherit;
  
  background-color: transparent;
  color: var(--text-medium);
  border: 1px solid var(--surface-light);
  border-radius: 8px;
  
  cursor: pointer;
  text-align: center;
  
  transition: background-color 0.2s ease, color 0.2s ease; }
.back-button:hover { background-color: var(--surface-light);
  color: var(--text-light);}

/* === QUIZ PAGE === */
.quiz-container { display: flex; justify-content: center; align-items: center; min-height: 100vh; padding: 20px; }
.quiz-card { background: var(--background-light); padding: 40px; border-radius: 15px; width: 100%; max-width: 600px; box-shadow: 0 10px 30px rgba(0, 0, 0, 0.4); text-align: center; }
.quiz-title { color: var(--primary-green); margin-bottom: 10px; }
.question-text { font-size: 3rem; color: var(--text-light); margin-bottom: 40px; }
.options-grid { display: grid; grid-template-columns: 1fr 1fr; gap: 15px; margin-bottom: 30px; }
.option-button { background: var(--surface-light); color: var(--text-light); border: none; padding: 20px; font-size: 1.2rem; border-radius: 8px; cursor: pointer; transition: background-color 0.2s; }
.option-button:hover:not(:disabled) { background: #718096; }
.option-button.correct { background: var(--feedback-correct); color: white; }
.option-button.incorrect { background: var(--feedback-incorrect); color: white; }

/* === MODALS & RESULTS === */
.modal-overlay { position: fixed; top: 0; left: 0; width: 100%; height: 100%; background-color: rgba(0, 0, 0, 0.7); display: flex; justify-content: center; align-items: center; z-index: 1000; }
.modal-content { background: var(--background-light); padding: 40px; border-radius: 15px; text-align: center; box-shadow: 0 10px 30px rgba(0, 0, 0, 0.5); animation: fadeIn 0.3s ease-out; }
.modal-score-display { font-size: 4rem; font-weight: bold; color: var(--primary-green); margin-bottom: 30px; }
.results-container { display: flex; justify-content: center; align-items: center; min-height: 100vh; padding: 20px; }
.results-card { background: var(--background-light); padding: 50px; border-radius: 15px; text-align: center; box-shadow: 0 10px 30px rgba(0, 0, 0, 0.4); }
.percentage-circle { width: 150px; height: 150px; border-radius: 50%; background: var(--surface-light); display: flex; justify-content: center; align-items: center; margin: 0 auto 10px auto; font-size: 2.5rem; font-weight: bold; color: var(--text-light); border: 5px solid var(--primary-green); }

.action-button { display: block; padding: 15px 20px; border-radius: 8px; text-decoration: none; color: white; font-weight: bold; font-size: 1.1rem; transition: transform 0.2s, background-color 0.2s; border: none; cursor: pointer; font-family: inherit; }
.action-button:hover { transform: translateY(-2px); }
.action-button.restart { background-color: var(--surface-light); }
.action-button.next-level { background-color: var(--primary-green); }
.action-button.home { background-color: var(--background-light); border: 1px solid var(--surface-light); }

/* =============================================== */
/* === PROFILE PAGE STYLES === */
/* =============================================== */

.profile-container { max-width: 1100px; margin: 40px auto; padding: 20px; } /* Increased max-width for new layout */
.profile-title { font-size: 3rem; color: var(--primary-green); text-align: center; margin-bottom: 40px; }
.history-item { background: var(--background-light); padding: 20px; border-radius: 8px; box-shadow: 0 4px 10px rgba(0,0,0,0.2); }
.history-item-header { border-bottom: 1px solid var(--surface-light); }
.progress-bar-container { background: var(--surface-light); border-radius: 5px; height: 8px; overflow: hidden; }
.progress-bar-fill { background-color: var(--primary-green); height: 100%; border-radius: 5px; }
.profile-grid-container {
  display: grid;
  grid-template-columns: 2fr 1fr; 
  gap: 30px;
  align-items: start;
  
}

.profile-main-content {
  display: flex;
  flex-direction: column;
  gap: 20px;
}

.profile-sidebar {
  background-color: var(--background-dark);
  padding: 20px;
  border-radius: 12px;
  position: sticky;
  top: 100px;
}

.profile-section {
  width: 100%;
  margin-bottom: 20px;
}

.profile-subtitle {
  font-size: 2rem;
  color: var(--text-light);
  padding-bottom: 15px;
  border-bottom: 1px solid var(--surface-light);
  margin-bottom: 25px;
  margin-top: 0;
}

.custom-quiz-card {
  position: relative;
  text-align: center;
  padding: 10px;
  background: var(--background-light);
  border-radius: 12px;
  display: flex;
  flex-direction: column;
}

.custom-quiz-date {
  font-size: 0.8rem;
  color: var(--text-medium);
  margin: 0 0 15px 0;
  text-align: right;
}

.custom-quiz-title {
  font-size: 1.5rem;
  font-weight: bold;
  color: var(--text-light);
  margin: 0 0 20px 0;
  flex-grow: 1;
}

.custom-quiz-meta {
  display: flex;
  justify-content: space-between;
  align-items: center;
  padding: 10px 0;
  border-top: 1px solid var(--surface-light);
  border-bottom: 1px solid var(--surface-light);
  margin-bottom: 20px;
}

.meta-tag {
  font-weight: bold;
  padding: 4px 10px;
  border-radius: 15px;
  font-size: 0.8rem;
  text-transform: capitalize;
}

.meta-tag.tag-kanji {
  background-color: rgba(159, 122, 234, 0.2);
  color: #c0a7f7;
}

.meta-tag.tag-vocabulary {
  background-color: rgba(66, 153, 225, 0.2);
  color: #70b3f0;
}

.meta-count {
  font-size: 0.9rem;
  color: var(--text-medium);
}

.custom-quiz-actions {
  margin-top: auto;
}

.custom-quiz-actions .action-button {
  display: flex;
  justify-content: center;
}

.filter-tabs {
  display: grid;
  grid-template-columns: repeat(3, 1fr);
  background-color: var(--background-dark);
  border-radius: 8px;
  padding: 5px;
  margin-bottom: 25px;
}

.filter-tabs button {
  padding: 10px;
  border: none;
  background-color: transparent;
  color: var(--text-medium);
  font-weight: bold;
  cursor: pointer;
  border-radius: 6px;
  transition: background-color 0.2s, color 0.2s;
  font-size: 0.9rem;
}

.filter-tabs button:hover {
  background-color: var(--surface-light);
}

.filter-tabs button.active {
  background-color: var(--primary-green);
  color: white;
}

.history-item-actions {
  margin-top: 15px;
  padding-top: 15px;
  border-top: 1px solid var(--surface-light);
  text-align: right;
}

.history-item-actions .action-button {
  padding: 8px 15px;
  font-size: 0.9rem;
}

.unattended-item {
  display: flex;
  justify-content: space-between;
  align-items: center;
  padding: 15px 20px;
}

.unattended-item h3 {
  margin: 0;
  font-size: 1.1rem;
  color: var(--text-light);
  text-align: left;
}

.unattended-item .action-button {
  padding: 8px 20px;
  font-size: 0.9rem;
  flex-shrink: 0;
}

/* MODIFICATION 3: ADDED SCROLLABLE QUIZ HISTORY LIST */
.profile-sidebar .history-list {
  max-height: 55vh; /* Sets maximum height to 55% of the viewport height */
  overflow-y: auto;   /* Adds a vertical scrollbar ONLY when needed */
  padding-right: 10px;/* Adds a little space for the scrollbar */
  gap: 15px;
}

.profile-sidebar .history-list::-webkit-scrollbar {
  width: 6px;
}

.profile-sidebar .history-list::-webkit-scrollbar-track {
  background: var(--surface-light);
  border-radius: 10px;
}

.profile-sidebar .history-list::-webkit-scrollbar-thumb {
  background-color: var(--primary-green);
  border-radius: 10px;
}
/* END MODIFICATION 3 */

/* Styles for the inline creator on the Profile Page */
.creator-form-inline {
  display: flex;
  flex-direction: column;
  gap: 15px;
  background-color: var(--background-dark);
  padding: 20px;
  border-radius: 8px;
}

.creator-form-inline input,
.creator-form-inline textarea {
  background-color: var(--background-light);
  border: 1px solid var(--surface-light);
  color: var(--text-light);
  padding: 15px;
  border-radius: 8px;
  font-size: 1rem;
  font-family: inherit;
}

.tag-selector {
  display: flex;
  gap: 15px;
}

.tag-button {
  background: var(--background-light);
  border: 1px solid var(--surface-light);
  color: var(--text-medium);
  padding: 10px 20px;
  border-radius: 20px;
  cursor: pointer;
  font-size: 1rem;
  transition: background-color 0.2s, color 0.2s;
}

.tag-button.active {
  background-color: var(--primary-green);
  color: white;
  border-color: var(--primary-green);
}

.create-button {
  align-self: flex-end;
  width: auto;
  padding: 10px 30px;
}

.empty-state-text {
  color: var(--text-medium);
  text-align: center;
  padding: 20px;
}

/* --- Misc Styles --- */
@keyframes gradient-animation { 0% { background-position: 0% 50%; } 50% { background-position: 100% 50%; } 100% { background-position: 0% 50%; } }
.expressive-title span:nth-child(1) { animation-delay: 0.1s; }
.expressive-title span:nth-child(2) { animation-delay: 0.2s; }
.expressive-title span:nth-child(3) { animation-delay: 0.3s; }
.expressive-title span:nth-child(4) { animation-delay: 0.4s; }
@keyframes fadeInUp { to { opacity: 1; transform: translateY(0); } }
.expressive-subtitle { animation: fadeInUp 0.5s ease 0.6s forwards; }
.start-quiz-button-new.expressive-button { opacity: 0; animation: fadeInUp 0.5s ease 0.8s forwards; }

#background-characters { position: absolute; top: 0; left: 0; width: 100%; height: 100%; z-index: 0; pointer-events: none; overflow: hidden; }
#background-characters span { position: absolute; color: rgba(255, 255, 255, 0.04); user-select: none; animation: floatUp linear infinite; }
@keyframes floatUp { 0% { transform: translateY(100vh); opacity: 0; } 10% { opacity: 1; } 90% { opacity: 1; } 100% { transform: translateY(-10vh); opacity: 0; } }
.content-overlay { position: relative; z-index: 1; }

.creator-card {
  border: 2px dashed var(--surface-light);
  background: transparent;
  text-align: left;
  display: flex;
  align-items: center;
  padding: 25px;
}
.creator-card:hover { border-color: var(--primary-green); background-color: rgba(88, 167, 0, 0.1); transform: translateY(0); }
.creator-card::before { content: '+'; font-size: 4rem; font-weight: 200; color: var(--primary-green); margin-right: 25px; line-height: 1; }
.creator-card-content h3 { margin: 0 0 10px 0; font-size: 1.5rem; color: var(--text-light); }
.creator-card-content p { margin: 0; font-size: 1rem; color: var(--text-medium); font-weight: normal; }

.score-counter-container {
  display: flex;
  justify-content: space-between;
  flex-wrap: wrap;
  width: 100%;
  margin-bottom: 30px;
  padding-bottom: 15px;
  border-bottom: 1px solid var(--surface-light);
  font-size: 1rem;
}
.score-item { color: var(--text-medium); }
.score-item span { font-weight: bold; font-size: 1.2rem; margin-left: 8px; }
.score-item.unseen span { color: var(--feedback-new); }
.score-item.correct span { color: var(--feedback-correct); }
.score-item.incorrect span { color: var(--feedback-incorrect); }
.score-item.mastered span { color: var(--feedback-mastered); }

.modal-actions { display: flex; justify-content: center; gap: 20px; margin-top: 30px; width: 100%; }
.modal-actions .action-button { flex: 1; max-width: 200px; }
.modal-actions .action-button.home { background-color: transparent; border: 1px solid var(--surface-light); }
.modal-actions .action-button.home:hover { background-color: var(--surface-light); }

.results-actions {
  display: grid;
  grid-template-columns: 1fr 1fr;
  gap: 15px;
  width: 100%;
  margin-top: 40px;
}
.action-button.next-level { background-color: var(--primary-green); border-color: var(--primary-green); }
.action-button.next-level:hover { background-color: var(--primary-green-dark); }
.action-button.restart { background-color: var(--surface-light); border-color: var(--surface-light); }
.action-button.restart:hover { background-color: #718096; }
.action-button.profile,
.action-button.home { background-color: transparent; border-color: var(--surface-light); color: var(--text-medium); }
.action-button.profile:hover,
.action-button.home:hover { background-color: var(--surface-light); color: var(--text-light); }

/* ================================= */
/* === RESPONSIVE STYLES === */
/* ================================= */

@media (max-width: 992px) {
  .expressive-title { font-size: 3.5rem; }
  .level-grid { grid-template-columns: repeat(auto-fit, minmax(220px, 1fr)); max-width: 90%; }
  .profile-grid-container { grid-template-columns: 1fr; }
  .profile-sidebar { position: static; }
}

@media (max-width: 768px) {
  .main-header { flex-direction: column; gap: 15px; padding: 15px 20px; position: relative; }
  .landing-page-wrapper { height: auto; min-height: 100vh; padding: 20px; }
  .main-nav { gap: 20px; }
  .expressive-content { padding: 0 20px; }
  .expressive-title { font-size: 3rem; line-height: 1.3; }
  .expressive-subtitle { font-size: 1.1rem; }
  .level-grid,
  .category-grid { grid-template-columns: 1fr; max-width: 100%; padding: 0 20px; }
  .level-selection-container { padding: 20px 10px; }
  .level-title,
  .category-title,
  .profile-title { font-size: 2.5rem; margin-bottom: 30px; }
  .quiz-card,
  .results-card,
  .modal-content { padding: 25px; margin: 0 15px; }
  .question-text { font-size: 2rem; }
  .options-grid { grid-template-columns: 1fr; }
}

@media (max-width: 576px) {
  body { font-size: 14px; }
  .logo-image { height: 40px; }
  .logo-title { font-size: 1.2rem; }
  .nav-link { font-size: 0.9rem; }
  .expressive-title { font-size: 2.2rem; }
  .expressive-subtitle { font-size: 1rem; }
  .start-quiz-button-new { font-size: 1.2rem; padding: 15px 30px; }
  .level-title,
  .category-title,
  .profile-title,
  .difficulty-title { font-size: 2rem; }
  .level-card { font-size: 1.5rem; padding: 30px 15px; }
  .creator-card { flex-direction: column; text-align: center; }
  .creator-card::before { margin-right: 0; margin-bottom: 15px; }
  .difficulty-button { font-size: 1.3rem; padding: 20px; }
  .question-text { font-size: 1.8rem; margin-bottom: 30px; }
  .option-button { padding: 15px; font-size: 1rem; }
  .modal-score-display { font-size: 3rem; }
  .percentage-circle { width: 120px; height: 120px; font-size: 2rem; }
}

@media (max-width: 480px) {
  .modal-actions { flex-direction: column; gap: 15px; }
  .modal-actions .action-button { max-width: 100%; }
}

/* === SCROLLABLE CUSTOM QUIZ LIST FIX === */

/* This targets the list container within the main profile content area */
.profile-main-content .history-list {
  /*
    Set a max-height tall enough for two cards plus the space between them.
    You can adjust this pixel value slightly if needed.
  */
  max-height: 410px;

  /* This adds a scrollbar only when the list grows beyond the max-height */
  overflow-y: auto;

  /* This adds some space on the right so the scrollbar doesn't cover the cards */
  padding-right: 15px;
}

/* (Optional) Adds consistent styling to the new scrollbar */
.profile-main-content .history-list::-webkit-scrollbar {
  width: 8px;
}

.profile-main-content .history-list::-webkit-scrollbar-track {
  background: var(--background-dark);
  border-radius: 10px;
}

.profile-main-content .history-list::-webkit-scrollbar-thumb {
  background-color: var(--surface-light);
  border-radius: 10px;
}

.profile-main-content .history-list::-webkit-scrollbar-thumb:hover {
  background-color: var(--primary-green);
}
/* This adds a margin to every card except the very last one */
.custom-quiz-card:not(:last-child) {
  margin-bottom: 10px;
}
.history-list :not(:last-child) {
  margin-bottom: 10px;
}
.delete-quiz-button {
  position: absolute;
  top: 45px;
  right: 35px;
  background: none;
  border: none;
  font-size: 1.5rem; /* Adjust icon size */
  color: var(--feedback-incorrect);
  cursor: pointer;
  padding: 5px;
  line-height: 1;
  transition: color 0.2s ease, transform 0.2s ease;
}

.delete-quiz-button:hover {
  color: var(--feedback-incorrect); /* Red color on hover */
  transform: scale(1.1);
}

/* Styles the position of the date and badge on the card header */
.card-header {
  display: flex;
  justify-content: space-between;
  align-items: center;
  margin-bottom: 15px;
}

/* Base style for the status badge itself */
.status-badge {
  font-size: 0.8rem;
  font-weight: bold;
  padding: 4px 10px;
  border-radius: 15px;
  text-transform: capitalize;
}

/* --- Unique Colors for Each Status --- */

/* Green for Mastered */
.status-badge.status-mastered { 
  background-color: rgba(72, 187, 120, 0.2);
  color: #68d391; 
}

/* Blue for Incomplete */
.status-badge.status-incomplete { 
  background-color: rgba(66, 153, 225, 0.2);
  color: #70b3f0; 
}

/* Gray for Unattended */
.status-badge.status-unattended { 
  background-color: rgba(74, 85, 104, 0.2);
  color: var(--text-medium); 
}
/* This styles the link when the page is active */
.nav-link.active {
  color: var(--text-light); /* Makes the active link text brighter */
}

/* This makes the green underline appear on the active link */
.nav-link.active::after {
  transform: scaleX(1);
  transform-origin: bottom center;
}

/* --- Logout Button Section --- */
.profile-logout-section {
  margin-top: 2rem;
}

.logout-button {
  width: 100%;
  padding: 15px;
  font-size: 1.1rem;
  font-weight: bold;
  background-color: var(--accent-red);
  color: var(--text-light);
  border: none; /* Ensure no other borders are interfering */
  cursor: pointer;
  
  /* ADD THIS: Makes the background color change smoothly */
  transition: background-color 0.2s ease-in-out;
}

/* FIX: Make the selector more specific to guarantee it applies on hover */
.action-button.logout-button:hover {
  background-color: #c0392b; /* Darker red on hover */
}

.datetime-display .date-part {
  color: #f4f5f7; /* A professional blue */
  font-weight: 500;
  font-size: 0.7em;

}

.datetime-display .time-part {
  color: #f9fbfc; /* A rich purple */
  margin-left: 8px;
  font-size: 0.7em;
}

/* Optional: Add a container for better layout on the quiz button */
.difficulty-details {
  margin-top: 8px;
  display: flex;
  flex-direction: column;
  align-items: center;
  gap: 5px;
}


/* The main overlay that covers the page and blurs the background */
.loading-overlay {
  /* Positioning */
  position: fixed;
  top: 0;
  left: 0;
  width: 100vw;
  height: 100vh;
  z-index: 9999;

  /* Centering the content */
  display: flex;
  justify-content: center;
  align-items: center;

  /* The blur effect */
  background-color: rgba(255, 255, 255, 0.1); /* Slight white tint */
  backdrop-filter: blur(8px);
  -webkit-backdrop-filter: blur(8px); /* For Safari support */
}

/* Container for the spinner and text */
.loading-container {
  display: flex;
  flex-direction: column;
  align-items: center;
  gap: 16px;
  color: white;
  background-color: transparent;
  padding: 32px;
  border-radius: 16px;
  box-shadow: 0 8px 32px 0 rgba(31, 38, 135, 0.37);
}

/* The animated circular spinner */
.loading-spinner {
  width: 50px;
  height: 50px;
  border-radius: 50%;
  
  /* The spinner "track" */
  border: 6px solid rgba(255, 255, 255, 0.3);
  
  /* The moving part of the spinner */
  border-top-color: #ffffff;
  
  /* The animation */
  animation: spin 1s linear infinite;
}

/* The text below the spinner */
.loading-text {
  font-size: 1.25rem; /* 20px */
  font-weight: 500;
  letter-spacing: 1px;
  color: #ffffff;
}

/* Keyframe animation for the spinner's rotation */
@keyframes spin {
  from {
    transform: rotate(0deg);
  }
  to {
    transform: rotate(360deg);
  }
}
/* --- Updated Difficulty Button Styles --- */

.difficulty-button {
  position: relative; /* Acts as an anchor for the corner elements */
  display: flex;
  justify-content: center;
  align-items: center;
  padding: 20px 15px;
  min-height: 120px; /* Ensures consistent button height */
}

/* Positions the status badge (e.g., 'incomplete') in the top-left corner */
.difficulty-status-badge {
  position: absolute;
  top: 10px;
  left: 10px;
  /* Reuses the existing badge styles for color */
}

/* This is the new container for the centered Title and Score */
.difficulty-main {
  display: flex;
  align-items: baseline; /* Aligns the bottom of the text */
  gap: 15px;
  text-align: center;
}

.difficulty-main-text {
  font-size: 1.8rem;
  font-weight: bold;
}

/* Positions the timestamp in the bottom-right corner */
.difficulty-timestamp {
  position: absolute;
  bottom: 10px;
  right: 15px;
  font-size: 1.2rem;
  font-weight: 500;
  color: var(--text-medium);
}

/* Keep the lock icon centered when no history is present */
.difficulty-button .lock-icon {
  font-size: 1.5rem;
}
/* Add this for the mastered button state */
.difficulty-button.mastered {
  background-color: #e0f2fe; /* A light, celebratory blue */
  border-color: #0284c7;
  cursor: not-allowed;
  opacity: 0.8;
}
.difficulty-button.mastered:hover {
  background-color: #e0f2fe; /* Prevent hover effect */
  transform: none;
}
/* src/pages/ExerciseListPage.css */

.exercise-list-container {
 width: 100%;
 max-width: 1100px;
 margin: 40px auto;
 padding: 20px;
}

.exercise-list-header {
 width: 100%;
 display: flex;
 align-items: center;
 margin-bottom: 40px;
 position: relative;
 justify-content: center;
}

/* --- FIX: This selector is now more specific --- */
/* By including the parent container, this rule will now override any global h1 styles. */
.exercise-list-container .exercise-list-title {
 text-transform: capitalize;
 border-bottom: none !important; /* This will now be correctly applied */
}

/* This is the unique 3-column grid layout for this page */
.exercise-grid {
 display: grid;
 grid-template-columns: repeat(3, 1fr);
 gap: 20px;
width: 100%;
}

/* Make the text inside the reused difficulty-button a bit smaller 
  so it fits nicely within the 3-column layout.
*/
.exercise-grid .difficulty-main-text {
 font-size: 1.25rem;
}

.exercise-grid .difficulty-score {
 font-size: 1.1rem;
}

/* Responsive Styles for the grid */
@media (max-width: 992px) {
 .exercise-grid {
  grid-template-columns: repeat(2, 1fr);
 }
}

@media (max-width: 600px) {
 .exercise-grid {
  grid-template-columns: 1fr;
 }
}

/* src/pages/DifficultySelectionPage.css */

.difficulty-selection-container {
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
  min-height: 100vh;
  width: 100%;
  max-width: 600px;
  margin: 0 auto;
  margin-top: 50px;
  padding: 20px;
}

.difficulty-title {
  /* This will inherit from your app_style.css */
  margin-bottom: 40px;
}

.difficulty-grid {
  display: flex;
  flex-direction: column;
  gap: 20px;
  width: 100%;
}
.selection-view {
  display: flex;
  flex-direction: column;
  align-items: center;
  width: max-content;
}

.reading-quiz-container {
    max-width: 1200px;
    margin: 40px auto;
    padding: 20px;
}

.reading-quiz-container .quiz-header {
    text-align: center;
    margin-bottom: 40px;
}

.reading-quiz-container .quiz-main-title {
    font-size: 2.5rem;
    color: var(--text-light);
    margin-bottom: 30px;
    text-transform: capitalize;
}

.reading-quiz-container .quiz-body {
    display: grid;
    grid-template-columns: 300px 1fr;
    gap: 40px;
    align-items: start;
}

.passage-list {
    display: flex;
    flex-direction: column;
    gap: 15px;
    position: sticky;
    top: 40px;
}

.passage-button {
    width: 100%;
    padding: 15px 20px;
    font-family: inherit;
    font-size: 1.1rem;
    font-weight: bold;
    text-align: left;
    color: var(--text-medium);
    background-color: var(--background-light);
    border: 1px solid var(--surface-light);
    border-radius: 8px;
    cursor: pointer;
    transition: background-color 0.2s, color 0.2s, border-color 0.2s;
    position: relative;
}

.passage-button:hover {
    background-color: var(--surface-light);
    color: var(--text-light);
}

.passage-button.active {
    background-color: var(--primary-green);
    color: white;
    border-color: var(--primary-green-dark);
}

.active-question-indicator {
    height: 10px;
    width: 10px;
    background-color: var(--feedback-new);
    border-radius: 50%;
    position: absolute;
    right: 15px;
    top: 50%;
    transform: translateY(-50%);
    animation: pulse 1.5s infinite;
}

@keyframes pulse {
    0% { box-shadow: 0 0 0 0 rgba(66, 153, 225, 0.7); }
    70% { box-shadow: 0 0 0 10px rgba(66, 153, 225, 0); }
    100% { box-shadow: 0 0 0 0 rgba(66, 153, 225, 0); }
}

.content-area {
    background-color: var(--background-light);
    border-radius: 12px;
    padding: 30px;
    box-shadow: 0 5px 15px rgba(0, 0, 0, 0.3);
}

.passage-content {
    padding-bottom: 30px;
    border-bottom: 1px solid var(--surface-light);
    margin-bottom: 30px;
}

.passage-title {
    font-size: 1.5rem;
    color: var(--primary-green);
    margin: 0 0 15px 0;
}

.passage-text {
    font-size: 1.2rem;
    line-height: 1.8;
    color: var(--text-light);
    white-space: pre-wrap;
}

.question-carousel {
    display: flex;
    align-items: center;
    justify-content: space-between;
    gap: 20px;
}

.carousel-arrow {
    background-color: var(--surface-light);
    color: var(--text-light);
    border: none;
    border-radius: 50%;
    width: 50px;
    height: 50px;
    font-size: 2rem;
    cursor: pointer;
    transition: background-color 0.2s;
    flex-shrink: 0;
    line-height: 50px;
}

.carousel-arrow:hover:not(:disabled) {
    background-color: #718096;
}

.carousel-arrow:disabled {
    opacity: 0.4;
    cursor: not-allowed;
}

.question-content {
    flex-grow: 1;
    min-width: 0;
}

.question-text {
    font-size: 2rem;
    margin-bottom: 30px;
    text-align: center;
}

.option-button:disabled:not(.correct):not(.incorrect) {
    opacity: 0.6;
    cursor: not-allowed;
    background-color: var(--surface-light);
}
.option-button:disabled:not(.correct):not(.incorrect):hover {
    transform: none;
}

@media (max-width: 992px) {
    .reading-quiz-container .quiz-body {
        grid-template-columns: 1fr;
    }
    .passage-list {
        position: static;
        flex-direction: row;
        overflow-x: auto;
        padding-bottom: 15px;
    }
    .passage-button {
        white-space: nowrap;
    }
}

/* Styles for the vocabulary highlighting feature */

/* The highlighted word itself (the "tag") */
.highlighted-vocab {
    position: relative; /* This is necessary for positioning the tooltip */
    color: green;
    font-weight: bold;
    cursor: pointer;
    font-size: 1.25em; /* Slightly larger for emphasis */
    display: inline-block; /* Ensures proper hover area */
}

/* The tooltip that appears on hover */
.vocab-tooltip {
    visibility: hidden; /* Hidden by default */
    opacity: 0;
    transition: opacity 0.3s ease-in-out;

    /* Tooltip appearance */
    width: 240px;
    background-color: #333;
    color: #fff;
    text-align: left;
    border-radius: 6px;
    padding: 10px;
    font-weight: normal; /* Reset font weight inside tooltip */
    font-size: 14px;
    line-height: 1.6;

    /* Positioning */
    position: absolute;
    z-index: 10;
    bottom: 140%; /* Position above the highlighted text */
    left: 50%;
    transform: translateX(-50%); /* Center the tooltip */

    /* Box shadow for depth */
    box-shadow: 0 5px 15px rgba(0, 0, 0, 0.3);
}

/* Tooltip paragraph styling */
.vocab-tooltip p {
    margin: 5px 0;
}

/* The small arrow pointing down from the tooltip */
.vocab-tooltip::after {
    content: "";
    position: absolute;
    top: 100%;
    left: 50%;
    margin-left: -5px;
    border-width: 5px;
    border-style: solid;
    border-color: #333 transparent transparent transparent;
}

/* Show the tooltip when hovering over the highlighted word */
.highlighted-vocab:hover .vocab-tooltip {
    visibility: visible;
    opacity: 1;
}
/* src/components/FlashcardViewer.css */

/*
 * Main container for the flashcard viewer.
 * Uses flexbox to center the content vertically and horizontally, matching the
 * style of other main pages like .quiz-container.
*/
.flashcard-container {
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  min-height: 80vh;
  padding: 20px;
  width: 100%;
  margin-top: 20px;
}

/*
 * Header section containing the title and progress counter.
*/
.flashcard-header {
  text-align: center;
  margin-bottom: 2rem;
  width: 100%;
  max-width: 500px;
}

.flashcard-header h1 {
  font-size: 2rem;
  color: var(--primary-green);
  margin: 0 0 10px 0;
  text-transform: capitalize;
}

.flashcard-progress {
  font-size: 1.2rem;
  color: var(--text-medium);
}

/*
 * The perspective wrapper for the 3D flip effect.
*/
.flashcard {
  width: 100%;
  max-width: 500px;
  height: 300px;
  position: relative;
  perspective: 1500px;
  cursor: pointer;
}

/*
 * The inner container that actually flips.
*/
.flashcard-inner {
  width: 100%;
  height: 100%;
  position: relative;
  transform-style: preserve-3d;
  transition: transform 0.6s ease;
}

/* Add the 'is-flipped' class to the .flashcard container to trigger the flip */
.flashcard.is-flipped .flashcard-inner {
  transform: rotateY(180deg);
}

/*
 * Shared styles for the front and back faces of the card.
 * They are absolutely positioned to stack on top of each other.
*/
.flashcard-face {
  position: absolute;
  width: 100%;
  height: 100%;
  backface-visibility: hidden;
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  padding: 25px;
  border-radius: 12px;
  box-shadow: 0 8px 25px rgba(0, 0, 0, 0.4);
  text-align: center;
}

/* Front of the card, using the standard light background */
.flashcard-front {
  background-color: var(--background-light);
  color: var(--text-light);
  border: 1px solid var(--surface-light);
}

/* Back of the card, using a slightly different surface color */
.flashcard-back {
  background-color: var(--surface-light);
  color: var(--text-light);
  transform: rotateY(180deg);
}

.flashcard-text {
  font-size: 4.5rem;
  font-weight: bold;
  margin: 0;
}

.flashcard-subtext {
  font-size: 2.5rem;
  color: var(--text-medium);
  margin-top: 15px;
}

/*
 * Navigation buttons below the card.
*/
.flashcard-navigation {
  margin-top: 2.5rem;
  display: flex;
  gap: 1rem;
  width: 100%;
  max-width: 500px;
}

.nav-button {
  flex: 1;
  padding: 15px 20px;
  font-size: 1rem;
  font-weight: bold;
  border-radius: 8px;
  cursor: pointer;
  transition: background-color 0.2s, transform 0.2s;
  font-family: inherit;
}

.nav-button:hover {
  transform: translateY(-2px);
}

/* Style for Prev/Next buttons */
.nav-button {
  background-color: var(--surface-light);
  color: var(--text-light);
  border: 1px solid var(--surface-light);
}
.nav-button:hover {
  background-color: #718096;
}

/* Style for the Home button */
.nav-button.home-button {
  background-color: transparent;
  border: 1px solid var(--surface-light);
  color: var(--text-medium);
  flex: 0 0 auto; /* Don't let the home button grow */
  padding: 15px 30px;
}
.nav-button.home-button:hover {
  background-color: var(--surface-light);
  color: var(--text-light);
}


/* Badge for cards that have been covered in the session */
.covered-badge {
  position: absolute;
  top: 15px;
  left: 15px;
  padding: 5px 10px;
  font-size: 1rem;
  border-radius: 50px;
}
.covered-badge.status-mastered {
    background-color: rgba(72, 187, 120, 0.9);
    color: white;
}


/* === RESPONSIVE STYLES === */

@media (max-width: 576px) {
  .flashcard {
    height: 250px;
  }

  .flashcard-text {
    font-size: 1.8rem;
  }

  .flashcard-subtext {
    font-size: 1.2rem;
  }

  .flashcard-navigation {
    flex-direction: row;
  }
  
  .nav-button {
      padding: 12px 15px;
  }
}
.grammar-study-container {
  width: 100%;
   margin: 40px;
  padding: 20px;
  display: flex;
  flex-direction: column;
}

.grammar-details-card {
  background-color: var(--background-light);
  padding: 30px;
  border-radius: 12px;
  margin-top: 100px;
  box-shadow: 0 5px 15px rgba(0,0,0,0.3);
}

.grammar-title {
  font-size: 2.5rem;
  color: var(--primary-green);
  margin-top: 0;
  margin-bottom: 25px;
  text-align: center;
}

.grammar-section h2 {
  font-size: 1.2rem;
  color: var(--text-medium);
  border-bottom: 1px solid var(--surface-light);
  padding-bottom: 10px;
  margin-bottom: 15px;
}

.grammar-section p {
  font-size: 1.1rem;
  line-height: 1.7;
  color: var(--text-light);
  margin: 0;
}

.example-carousel {
  text-align: center;
}

.example-carousel h2 {
  font-size: 1.5rem;
  color: var(--text-light);
  margin-bottom: 20px;
}

/* Re-using flashcard styles for the example card */
.flashcard {
  width: 100%;
  max-width: 600px;
  margin: 0 auto;
  height: 250px;
  perspective: 1000px;
  cursor: pointer;
  background-color: transparent;
}

.flashcard-inner {
  position: relative;
  width: 100%;
  height: 100%;
  transition: transform 0.6s;
  transform-style: preserve-3d;
}

.flashcard.is-flipped .flashcard-inner {
  transform: rotateY(180deg);
}

.flashcard-face {
  position: absolute;
  width: 100%;
  height: 100%;
  -webkit-backface-visibility: hidden;
  backface-visibility: hidden;
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  padding: 20px;
  border-radius: 12px;
  box-shadow: 0 4px 8px rgba(0,0,0,0.2);
}

.flashcard-front {
  background-color: #fff;
  color: #333;
}

.flashcard-back {
  background-color: var(--surface-light);
  color: var(--text-light);
  transform: rotateY(180deg);
}

.flashcard-text {
  font-size: 2rem;
  text-align: center;
  margin: 0;
}

.flashcard-text.english {
  font-size: 1.5rem;
}

.flashcard-subtext {
  font-size: 1.2rem;
  color: var(--text-medium);
  margin-top: 15px;
}

.carousel-navigation {
  margin-top: 25px;
  display: flex;
  justify-content: center;
  gap: 20px;
}

.carousel-navigation button {
  padding: 10px 30px;
  font-size: 1rem;
  font-weight: bold;
  background-color: var(--surface-light);
  color: var(--text-light);
  border: none;
  border-radius: 8px;
  cursor: pointer;
  transition: background-color 0.2s;
}

.carousel-navigation button:hover:not(:disabled) {
  background-color: var(--primary-green);
}

.carousel-navigation button:disabled {
  opacity: 0.5;
  cursor: not-allowed;
}
